
@{
    ViewData["Title"] = "RoleIndex";
    var type = ViewBag.Type as string;
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<a href="../RoleAdmin/Create" class="btn btn-primary green">Create</a>
<div class="row" style="margin-top: 15px;" id="TagList">
    <div class="col-md-12">
        <!-- BEGIN SAMPLE TABLE PORTLET-->
        <div class="portlet box green">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-cogs"></i>Admin User List
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-scrollable">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th scope="col" style="width:650px !important">序号 </th>
                                <th scope="col">Name</th>
                                <th scope="col"> Users </th>
                                <th scope="col">Operation</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(item,index) in RoleList">
                                <td>{{index+1}}</td>
                                <td>{{item.name}}</td>
                                <td>{{item.users}}</td>
                                <td>
                                    <button class="btn btn-primary btn-xs" v-on:click="edit(index,item)"><i class="icon-pencil"></i></button>
                                    <button class="btn btn-danger btn-xs" v-on:click="deleteRole(index,item)"><i class="icon-trash "></i></button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <!-- END SAMPLE TABLE PORTLET-->
    </div>
</div>

<script>
    var url = "http://localhost:5001" + "/api/System/"+"Role/";
    window.onload = function ()
    {
        var vue = new Vue({
            el: "#TagList",
            data: {
                //空的初始化数据
                RoleList: [],
                //总项目数
                totalCount: 200,
                //分页数
                pageCount: 20,
                //当前页面
                pageCurrent: 1,
                //分页大小
                pageSize: 8,
                //显示分页按钮数
                showPages: 11,
                //开始显示的分页按钮
                showPagesStart: 1,
                //结束显示的分页按钮
                showPageEnd: 100
            },
            mounted() {
                this.showPage(1, null, true);
            },
            computed: {
                remaining: function () {
                    return this.totalCount;
                }
            },//这里我们声明了一个计算属性 remaining,通过返回this.num的值做为未完成总数
            methods: {//VUE事件处理器
                getRoleData(url, pageCurrent, pageSize) {
                    var tempUrl = url + pageCurrent + "/" + pageSize;
                    this.$http.get(tempUrl).then((response) => {
                        this.RoleList = response.data.roleList;
                        this.totalCount = response.data.count;
                        this.pageCount = Math.ceil(this.totalCount / this.pageSize);
                        this.showPages = this.pageCount - 4;   //要显示的分页数
                    });
                },//this.getData取得数据库数据，并取得未完成事件总数
                showPage: function (pageIndex, $event, forceRefresh) {
                    console.log('当前页数为' + pageIndex);
                    this.getRoleData(url, pageIndex, this.pageSize);
                    if (pageIndex > 0) {
                        if (pageIndex > this.pageCount) {
                            pageIndex = this.pageCount;
                        }

                        //判断数据是否需要更新
                        var currentPageCount = Math.ceil(this.totalCount / this.pageSize);
                        if (currentPageCount != this.pageCount) {
                            pageIndex = 1;
                            this.pageCount = currentPageCount;
                        }
                        else if (this.pageCurrent == pageIndex && currentPageCount == this.pageCount && typeof (forceRefresh) == "undefined") {
                            console.log("not refresh");
                            return;
                        }

                        //处理分页点中样式
                        var buttons = $("#pager").find("span");
                        for (var i = 0; i < buttons.length; i++) {
                            if (buttons.eq(i).html() != pageIndex) {
                                buttons.eq(i).removeClass("active");
                            }
                            else {
                                buttons.eq(i).addClass("active");
                            }
                        }
                        this.pageCurrent = pageIndex;
                        //计算分页按钮数据
                        if (this.pageCount > this.showPages) {
                            if (pageIndex <= (this.showPages - 1) / 2) {
                                this.showPagesStart = 1;
                                this.showPageEnd = this.showPages - 1;
                                console.log("showPage1")
                            }
                            else if (pageIndex >= this.pageCount - (this.showPages - 3) / 2) {
                                this.showPagesStart = this.pageCount - this.showPages + 2;
                                this.showPageEnd = this.pageCount;
                                console.log("showPage2")
                            }
                            else {
                                console.log("showPage3")
                                this.showPagesStart = pageIndex - (this.showPages - 3) / 2;
                                this.showPageEnd = pageIndex + (this.showPages - 3) / 2;
                            }
                        }
                        console.log("showPagesStart:" + this.showPagesStart + ",showPageEnd:" + this.showPageEnd + ",pageIndex:" + pageIndex);
                    }
                },//分页方法
                edit(index, item) {
                    var url = "../Blog/AddTag?menuId=BlogAddTag&type=header&id=" + item.id;
                    window.open(url, "_self", "", false);
                    console.log("index" + index);
                }
                
            },//完成任务或者撤销任务
        });
    }
</script>
