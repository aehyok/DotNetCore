
@{
    ViewData["Title"] = "Add";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}
<link href="~/scripts/select2/select2.min.css" rel="stylesheet" />
<script src="~/scripts/kindeditor/kindeditor-all.js"></script>
<script src="~/scripts/kindeditor/lang/zh_CN.js"></script>
<script src="~/scripts/select2/select2.min.js"></script>
<script src="~/lib/vue-select/dist/vue-select.js"></script>



<div style="padding-bottom:50px;" >
    <div class="portlet box green-meadow">
        <div class="portlet-title">
            <div class="caption">
                <i class="fa fa-cogs"></i>新增博客
            </div>
        </div>
        <div class="portlet-body">
            <div class="row">
                <form role="form" id="default">
                    <div class="form-body col-md-12">
                        <div style="display:none;" >
                            @{
                                //string id = (Model.Id > 0) ? Model.Id.ToString() : "0";
                                string id = "0";
                            }
                            <input type="text" v-model="id" />
                        </div>
                        <div class="form-group">
                            <label for="Title">标题</label>
                            <input type="text"  class="form-control" v-model="title" />
                        </div>
                        <div class="form-group">
                            <label for="content">内容(Kindeditor编辑器)</label>
                            <textarea class="form-control" cols="60" rows="25" id="content" v-model="content"></textarea>
                        </div>
                        <div class="form-group">
                            <label for="Tag">标签</label>
                            <v-select :value.sync="selected"
                                      multiple
                                      :debounce="250"
                                      :on-search="getTagList"
                                      :options="options"
                                      placeholder="Search GitHub Repositories..."
                                      label="name">
                            </v-select>
                        </div>
                       
                        <div class="form-group pull-right">
                            <button type="button" class="btn btn-success"  v-on:click="BtnSave_Click()">保存</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@{
    //var tag = ViewData["TagList"] as string;
}
<script type="text/javascript">
    var tempUrl = "http://localhost:5001";

    $(document).ready(function () {
        initkindEditor();
    });
    //初始化富文本
    function initkindEditor() {
        KindEditor.ready(function (K) {
            var editor = K.create('#content', {
                themeType: "simple",
                uploadJson: "../Blog/UploadImage",//上传文件方法(注意这两个路径)
                fileManagerJson: "../Blog/ProcessRequest",  ///浏览文件方法
                resizeType: 1,
                pasteType: 2,
                syncType: "",
                filterMode: true,
                allowPreviewEmoticons: false,
                //items: [
                //    'source', 'undo', 'redo', 'plainpaste', 'wordpaste', 'clearhtml', 'quickformat',
                //    'selectall', 'fullscreen', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor',
                //    'bold', 'italic', 'underline', 'hr', 'removeformat', '|', 'justifyleft', 'justifycenter',
                //    'justifyright', 'insertorderedlist', 'insertunorderedlist', '|', 'link', 'image',
                //    'unlink', 'baidumap', 'emoticons'
                //],
                afterCreate: function () {
                    this.sync();
                },
                afterBlur: function () {
                    this.sync();
                },
                afterChange: function () {
                    //富文本输入区域的改变事件，一般用来编写统计字数等判断
                    K('.word_count1').html("最多20000个字符,已输入" + this.count() + "个字符");
                },
                afterUpload: function (url) {
                    //上传图片后的代码
                },
                allowFileManager: false,
                allowFlashUpload: false,
                allowMediaUpload: false,
                allowFileUpload: false
            });
        });
    }

    //vue-select 使用说明 http://sagalbot.github.io/vue-select/#install
    //select2使用 http://www.cnblogs.com/wuhuacong/p/4761637.html
    Vue.component('v-select', VueSelect.VueSelect);

    var url = "http://localhost:5001" + "/api/Blog/";
    var editUrl = url + "Add/";
    var deleteUrl = url + "Article/";
    window.onload = function ()
    {
        var vue = new Vue({
            el: "#default",
            data: {
                id: 0,
                title: "1",
                content: "",
                tags: [],
                selected: [],
                options: []
            },
            mounted() {
                this.getTagList();
                var id = Util.GetUrlRegExp("id");
                if (id == null || id == "") {
                    return;
                }
                else {
                    this.getArticleData(id);//通过this.getArticleData的URL取得API数据
                }
            },
            methods: {//VUE事件处理器
                getArticleData(id) {
                    var tempUrl = editUrl + id;
                    this.$http.get(tempUrl).then((response) => {
                        console.log(response.data);
                        this.id = response.data.article.id;
                        this.title = response.data.article.title;
                        this.content = response.data.article.content;
                        this.selected = response.data.selectList;
                        KindEditor.html('#content', response.data.article.content);
                    });
                },
                getTagList() {
                    var url = tempUrl + "/api/Blog/TagList";
                    this.$http.get(url).then((response) => {
                        this.options = response.data;
                        console.log(response.data);
                    });
                },
                BtnSave_Click() {
                    var json = { "Id": this.id, "Title": this.title, "Content": $("#content").val() };
                    var array = this.selected;
                    var tagArray = [];
                    array.forEach(function (item, index, input) {
                        tagArray.push(item.id);
                    })
                    var tag = { "TagId": tagArray.join(',').toString() };


                    axios.post(url + 'SaveBlogArticle', JSON.stringify({ Article: json, Tags: tag }), {
                        headers: {
                            'Content-Type': 'application/json; charset=utf-8',
                            'DataType': 'json'
                        }
                    })
                    .then(function (response) {
                        toastr.success("保存成功！");
                        return false;
                    })
                    .catch(function (error) {
                        toastr.success("保存失败！");
                    });
                }
            }
        });
    }
</script>
